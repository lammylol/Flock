import fs from "fs";
import path from "path";

const schemaPath = path.join(__dirname, "firebaseSchemas.json");
const outputPath = path.join(__dirname, "firebaseTypes.ts");

const schema = JSON.parse(fs.readFileSync(schemaPath, "utf-8"));

const convertType = (type: string) => {
  switch (type) {
    case "string":
      return "string";
    case "number":
      return "number";
    case "boolean":
      return "boolean";
    case "Timestamp":
      return "firebase.firestore.Timestamp";
    case "string[]":
      return "string[]";
    default:
      return type; // Handle complex types
  }
};

let typesFileContent = `// Auto-generated by generatedTypes. Do not edit manually.\n\n`;

Object.entries(schema).forEach(([collectionName, fields]) => {
  typesFileContent += `export type ${
    collectionName.charAt(0).toUpperCase() + collectionName.slice(1)
  } = {\n`;
  Object.entries(fields as Record<string, string>).forEach(([key, type]) => {
    typesFileContent += `  ${key}: ${convertType(type)};\n`;
  });
  typesFileContent += `};\n\n`;
});

fs.writeFileSync(outputPath, typesFileContent, "utf-8");

console.log("âœ… Firestore TypeScript types generated successfully.");
